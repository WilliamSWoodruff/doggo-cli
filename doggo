#!/usr/bin/env node

'use strict';

const Program = require('commander');
const Fs = require('fs');
const Spawn = require('child_process').spawn;
const DoggoNative = require('doggo')('native');

const dbPath = `${__dirname}/lib/doggo.sqlite`;

// Init the db if not there, then re-run the doggo command
if(!Fs.existsSync(dbPath)) {

    Fs.writeFileSync(dbPath, '');

    const dbUtils = require('./lib/db')(Program, DoggoNative);
    const db = dbUtils.db;

    db.migrate.latest()
    .then(() => {

        db('Settings')
        .insert({
            id: 1,
            keepUnlocked: 1
        }).
        then(() => {

            dbUtils.destroy();
            const args = process.argv.slice(2);
            const doggoProcess = Spawn('doggo', args);
            doggoProcess.stdout.pipe(process.stdout);
        })
        .catch(dbUtils.onErrorDestroy);
    })
    .catch(dbUtils.onErrorDestroy);

    return;
};

const dbUtils = require('./lib/db')(Program, DoggoNative);
const db = dbUtils.db;

const internals = {};

Program
    .version('0.0.1')
    .description('A cli for creating and sharing secure passwords, texts, and files');

Program
    .command('meme')
    .description('Gimme Doggo memes!')
    .action(() => {

        Spawn('open', ['https://www.facebook.com/diabeticDoggos']);
    });

require('./lib/db')(Program, DoggoNative);
require('./lib/utils')(Program, DoggoNative);
require('./lib/user')(Program, DoggoNative);
require('./lib/remote')(Program, DoggoNative);
require('./lib/group')(Program, DoggoNative);
// require('./lib/doggo-cli-organization')(Program, DoggoNative);
require('./lib/secure')(Program, DoggoNative);
require('./lib/gpg')(Program, DoggoNative);
require('./lib/find')(Program, DoggoNative);
require('./lib/client')(Program, DoggoNative);

Program
    .command('*')
    .action(() => {

        Program.help();
    });

if (!process.argv.slice(2).length) {
    Program.help();
}

Program.parse(process.argv);
